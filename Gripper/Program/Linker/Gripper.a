;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.3 Standard
;Automatic Program Generator
;ï¿½ Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project : Gripper
;Version :
;Date    : 09.09.2020
;Author  : vladubase@gmail.com
;Company :
;Comments:
;
;
;Chip type               : ATtiny85
;AVR Core Clock frequency: 8,000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 128
;*****************************************************/
;
;#include <tiny85.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x18
;PCODE: $00000004 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000005 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x18
;PCODE: $00000007 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $00000008 VOL: 0
	#endif
;PCODE: $00000009 VOL: 0
;PCODE: $0000000A VOL: 0
;#include <delay.h>
;#include <stdint.h>
;#include <stdbool.h>
;
;// Declare your global variables here
;
;void main (void) {
; 0000 001E void main (void) {

	.CSEG
;PCODE: $0000000B VOL: 0
; 0000 001F     // Declare your local variables here
; 0000 0020 
; 0000 0021     // System Clock
; 0000 0022     // Crystal Oscillator division factor: 32
; 0000 0023         CLKPR=0x85;
;PCODE: $0000000C VOL: 0
;PCODE: $0000000D VOL: 0
; 0000 0024 
; 0000 0025     // Input/Output Ports initialization
; 0000 0026     // Port B initialization
; 0000 0027     // Func5=In Func4=In Func3=In Func2=In Func1=In Func0=Out
; 0000 0028     // State5=T State4=T State3=T State2=T State1=T State0=0
; 0000 0029         PORTB=0x00;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 002A         DDRB=0x01;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 002B 
; 0000 002C     // Timer/Counter 0 initialization
; 0000 002D     // Clock source: System Clock
; 0000 002E     // Clock value: (System Clock / 256)
; 0000 002F     // Mode: Fast PWM top=0xFF
; 0000 0030     // OC0A output: Non-Inverted PWM
; 0000 0031     // OC0B output: Disconnected
; 0000 0032         TCCR0A=0x83;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0033         TCCR0B=0x04;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0034         TCNT0=0x00;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0035         OCR0A=0x00;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0036         OCR0B=0x00;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0037 
; 0000 0038     // Timer/Counter 1 initialization
; 0000 0039     // Clock source: System Clock
; 0000 003A     // Clock value: Timer1 Stopped
; 0000 003B     // Mode: Normal top=0xFF
; 0000 003C     // OC1A output: Disconnected
; 0000 003D     // OC1B output: Disconnected
; 0000 003E     // Timer1 Overflow Interrupt: Off
; 0000 003F     // Compare A Match Interrupt: Off
; 0000 0040     // Compare B Match Interrupt: Off
; 0000 0041         PLLCSR=0x00;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0042 
; 0000 0043         TCCR1=0x00;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0044         GTCCR=0x00;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0045         TCNT1=0x00;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0046         OCR1A=0x00;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0047         OCR1B=0x00;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0048         OCR1C=0x00;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0049 
; 0000 004A     // External Interrupt(s) initialization
; 0000 004B     // INT0: Off
; 0000 004C     // Interrupt on any change on pins PCINT0-5: Off
; 0000 004D         GIMSK=0x00;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 004E         MCUCR=0x00;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 004F 
; 0000 0050     // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0051     	TIMSK=0x00;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0052 
; 0000 0053     // Universal Serial Interface initialization
; 0000 0054     // Mode: Disabled
; 0000 0055     // Clock source: Register & Counter=no clk.
; 0000 0056     // USI Counter Overflow Interrupt: Off
; 0000 0057         USICR=0x00;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0058 
; 0000 0059     // Analog Comparator initialization
; 0000 005A     // Analog Comparator: Off
; 0000 005B         ACSR=0x80;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 005C         ADCSRB=0x00;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 005D         DIDR0=0x00;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 005E 
; 0000 005F     // ADC initialization
; 0000 0060     // ADC disabled
; 0000 0061         ADCSRA=0x00;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0062 
; 0000 0063 	// DDRB |= (1 << DDB1);
; 0000 0064     // PORTB |= (1 << 1);
; 0000 0065 
; 0000 0066     while (true) {
;PCODE: $0000003A VOL: 0
; 0000 0067 //    	uint8_t i = 0;
; 0000 0068 //    	for (i = 30; i < 166; i++) {
; 0000 0069 //         	OCR0A = i;
; 0000 006A //        	delay_ms (30);
; 0000 006B //        }
; 0000 006C     	OCR0A = 30;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 006D     }
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 006E }
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;
