;/****
;	*	@name		GRIPPER
;	*	@file 		Gripper.c
;	*
;	*	@author 	Uladzislau 'vladubase' Dubatouka
;	*				<vladubase@gmail.com>.
;	*	@version	V1.0
;	*	@date 		Created on 2020.09.09.
;	*
;	*	@brief 		This program is controlling the servo on gripper.
;    *
;    *   @note       Chip type               : ATtiny85
;    *               AVR Core Clock frequency: 8,000000 MHz
;    *               Memory model            : Small
;    *               External RAM size       : 0
;    *               Data Stack size         : 128
;*****/
;
;
;/************************************** Includes **************************************/
;
;#include    <tiny85.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x18
;PCODE: $00000004 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000005 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x18
;PCODE: $00000007 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $00000008 VOL: 0
	#endif
;PCODE: $00000009 VOL: 0
;PCODE: $0000000A VOL: 0
;#include    <delay.h>
;#include    <stdint.h>
;#include    <stdbool.h>
;
;
;/*************************************** Defines **************************************/
;
;#define     SIGNAL      PINB & (1 << DDB1)
;
;
;/*********************************** Global Variables *********************************/
;
;#define     MIN_PWM     60
;#define     MAX_PWM     165
;
;
;/********************************* Function  prototypes *******************************/
;
;void InitSys (void);
;
;
;/**************************************** Main ****************************************/
;
;void main (void) {
; 0000 002E void main (void) {

	.CSEG
;PCODE: $0000000B VOL: 0
; 0000 002F     InitSys ();
;PCODE: $0000000C VOL: 0
; 0000 0030 
; 0000 0031     while (true) {
;PCODE: $0000000D VOL: 0
; 0000 0032         // Read data on SIGNAL port
; 0000 0033         if (SIGNAL) {
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0034             // Close gripper
; 0000 0035         	OCR0A = MAX_PWM;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0036         } else {
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0037             // Open gripper
; 0000 0038         	OCR0A = MIN_PWM;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0039         }
;PCODE: $00000017 VOL: 0
; 0000 003A 
; 0000 003B         // Delay to minimize the influence of noise.
; 0000 003C         delay_ms (500);
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 003D     }
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 003E }
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;
;
;/************************************* Functions **************************************/
;
;void InitSys (void) {
; 0000 0043 void InitSys (void) {
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0044     // Declare your local variables here
; 0000 0045 
; 0000 0046     // System Clock
; 0000 0047     // Crystal Oscillator division factor: 32
; 0000 0048         CLKPR=0x85;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0049 
; 0000 004A     // Input/Output Ports initialization
; 0000 004B     // Port B initialization
; 0000 004C     // Func5=In Func4=In Func3=In Func2=In Func1=In Func0=Out
; 0000 004D     // State5=T State4=T State3=T State2=T State1=T State0=0
; 0000 004E         PORTB=0x00;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 004F         DDRB=0x01;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0050 
; 0000 0051     // Timer/Counter 0 initialization
; 0000 0052     // Clock source: System Clock
; 0000 0053     // Clock value: (System Clock / 256)
; 0000 0054     // Mode: Fast PWM top=0xFF
; 0000 0055     // OC0A output: Non-Inverted PWM
; 0000 0056     // OC0B output: Disconnected
; 0000 0057         TCCR0A=0x83;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0058         TCCR0B=0x04;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0059         TCNT0=0x00;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 005A         OCR0A=0x00;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 005B         OCR0B=0x00;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 005C 	/*
; 0000 005D     // Timer/Counter 1 initialization
; 0000 005E     // Clock source: System Clock
; 0000 005F     // Clock value: Timer1 Stopped
; 0000 0060     // Mode: Normal top=0xFF
; 0000 0061     // OC1A output: Disconnected
; 0000 0062     // OC1B output: Disconnected
; 0000 0063     // Timer1 Overflow Interrupt: Off
; 0000 0064     // Compare A Match Interrupt: Off
; 0000 0065     // Compare B Match Interrupt: Off
; 0000 0066         PLLCSR=0x00;
; 0000 0067 
; 0000 0068         TCCR1=0x00;
; 0000 0069         GTCCR=0x00;
; 0000 006A         TCNT1=0x00;
; 0000 006B         OCR1A=0x00;
; 0000 006C         OCR1B=0x00;
; 0000 006D         OCR1C=0x00;
; 0000 006E 
; 0000 006F     // External Interrupt(s) initialization
; 0000 0070     // INT0: Off
; 0000 0071     // Interrupt on any change on pins PCINT0-5: Off
; 0000 0072         GIMSK=0x00;
; 0000 0073         MCUCR=0x00;
; 0000 0074 
; 0000 0075     // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0076     	TIMSK=0x00;
; 0000 0077 
; 0000 0078     // Universal Serial Interface initialization
; 0000 0079     // Mode: Disabled
; 0000 007A     // Clock source: Register & Counter=no clk.
; 0000 007B     // USI Counter Overflow Interrupt: Off
; 0000 007C         USICR=0x00;
; 0000 007D 
; 0000 007E     // Analog Comparator initialization
; 0000 007F     // Analog Comparator: Off
; 0000 0080         ACSR=0x80;
; 0000 0081         ADCSRB=0x00;
; 0000 0082         DIDR0=0x00;
; 0000 0083 
; 0000 0084     // ADC initialization
; 0000 0085     // ADC disabled
; 0000 0086         ADCSRA=0x00;
; 0000 0087 	*/
; 0000 0088 }
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
